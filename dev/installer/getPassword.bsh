#!/bin/bash
# ********************************************************************
# Ericsson Radio Systems AB                                     SCRIPT
# ********************************************************************
#
#
# (c) Ericsson Radio Systems AB 2018 - All rights reserved.
#
# The copyright to the computer program(s) herein is the property
# of Ericsson Radio Systems AB, Sweden. The programs may be used 
# and/or copied only with the written permission from Ericsson Radio 
# Systems AB or in accordance with the terms and conditions stipulated 
# in the agreement/contract under which the program(s) have been 
# supplied.
#
# ********************************************************************
# Name    : getPassword.bsh
# Date    : 15/07/2020(dummy date) Last modified 10/05/2023
# Purpose : Ericsson Network IQ utility to change the User Password in repdb
# Usage   : getPassword -u <USERNAME>
# ********************************************************************

########################################################################
# Function: usage_msg
# Displays the usage message
#
# Arguments: None
#
# Return Values: None
usage_msg() {
	echo "getPassword -u <USERNAME>"
	echo "u: User Name"
	echo "e.g.: 'KeyStore' for KeyStore password or 'dc' for dc password."
		
	exit 10
}

############################ Main Body #################################

. /eniq/home/dcuser/.profile

if [ -z "${CONF_DIR}" ] ; then
  echo "ERROR: CONF_DIR is not set"
  exit 1
fi

if [ ! -r "${CONF_DIR}/niq.ini" ] ; then
  echo "ERROR: Source file is not readable at ${CONF_DIR}/niq.ini"
  exit 2
fi

. /eniq/admin/lib/common_functions.lib

if [ "$#" -ne 2 ]; then
  usage_msg
fi

while getopts  "u:" flag ; do
  case $flag in
  u)  [[ -z "$OPTARG" || "$OPTARG" == "" ]] && usage_msg
      user_name=`echo ${OPTARG^^}`
      ;;
  \?) usage_msg
      ;;
  esac
done

if [ "${user_name}" == "KEYSTORE" ]
then 
  key="keyStorePassValue"
elif [ "${user_name}" == "LDAP" ]
then 
  key="LDAP_BIND_PASSWORD"
else 
  key=${user_name}Password
fi

## Reading niq.ini
while IFS="" read -r l || [ -n "$l" ]
do
  l=`echo $l | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'`
  
  if [[ "$l" =~ ^\[.*\]$ ]]; then
    block=`echo $l | sed -e 's/^\[//' -e 's/\]$//'`
	if [ "${block}" == "DB" -o "${block}" == "REP" -o "${block}" == "DWH" -o "${block}" == "LDAP" -o "${block}" == "KEYSTOREPASS" ]; then
	  reading_correct_block="true"
	else
	  reading_correct_block="false"
	fi
  fi
  
  if [ "${reading_correct_block}" == "true" ]; then
    if [[ "$l" =~ ^${key}\=.* ]]; then 
      pass=`inigetpassword ${block} -f ${CONF_DIR}/niq.ini -v ${key}`
	  break
    fi
  fi
done < ${CONF_DIR}/niq.ini


[[ -z "$pass" || "$pass" == "" ]] && echo "Unable to fetch the password for ${user_name}. Please check if the password is configured or if the user name is correct." && exit 10

echo "${user_name} password: "${pass}

exit 0