#!/bin/bash
# ********************************************************************
# Ericsson Radio Systems AB                                     SCRIPT
# ********************************************************************
#
#
# (c) Ericsson Radio Systems AB 2018 - All rights reserved.
#
# The copyright to the computer program(s) herein is the property
# of Ericsson Radio Systems AB, Sweden. The programs may be used 
# and/or copied only with the written permission from Ericsson Radio 
# Systems AB or in accordance with the terms and conditions stipulated 
# in the agreement/contract under which the program(s) have been 
# supplied.
#
# ********************************************************************
# Name    : run_dir_checker.bsh
# Date    : 15/07/2020(dummy date) Last modified 10/05/2023
# Purpose : Ericsson Network script to run directorychecker set for interfaces and techpacks
# Usage   : run_dir_checker.bsh
# ********************************************************************
CONF_DIR=/eniq/sw/conf

if [ -s /eniq/admin/lib/common_functions.lib ]; then
    . /eniq/admin/lib/common_functions.lib
else
        echo "Could not find /eniq/admin/lib/common_functions.lib"
        exit 1
fi

########################################################################
# Function: remove_connection_string
# Removes/Deletes connection string once the script terminates
#
# Arguments: None
#
# Return Values: None
remove_connection_string()
{
if [ -f $connection_string ]; then
  $RM -f $connection_string
  if [ $? != 0 ]; then
    $ECHO "Unable to delete $connection_string"
  fi
fi 
}

trap remove_connection_string EXIT

ETLREPUSER=`inigetpassword REP -v ETLREPUsername -f ${CONF_DIR}/niq.ini`
ETLREPPASSWORD=`inigetpassword REP -v ETLREPPassword -f ${CONF_DIR}/niq.ini`
connection_string=/var/tmp/encrypt_$$.txt
connection_string_decrypt="-c \"uid=${ETLREPUSER};pwd=${ETLREPPASSWORD};eng=repdb\" -host localhost -port 2641 -nogui -onerror exit" 

get_encrypt_file "${connection_string_decrypt}" "${connection_string}"

. /eniq/sybase_iq/IQ-*/IQ-*.sh
 
sybase_env_variables_ec=$?
if [ $sybase_env_variables_ec -ne 0 ]; then
     $ECHO "Unable to find sybase env variables"
fi

DBISQL=$(which dbisql)

#-----------------------------------------------------------------------
#function to get installed techpack names	
#-----------------------------------------------------------------------

get_InstalledTPLIst()

{

echo "getting list of installed techpacks"

/eniq/sw/installer/installed_techpacks -s >TP_LIST

}

get_ActiveInterfaceList()

{

echo "getting list of active interfaces"

${DBISQL} @${connection_string} "SELECT collection_set_name FROM etlrep.meta_collection_sets, etlrep.meta_schedulings WHERE etlrep.meta_collection_sets.collection_set_id = etlrep.meta_schedulings.collection_set_id AND etlrep.meta_collection_sets.enabled_flag = 'y' and etlrep.meta_schedulings.hold_flag = 'N' AND etlrep.meta_schedulings.name like 'TriggerAdapter%' AND etlrep.meta_collection_sets.collection_set_name like '%-%' AND etlrep.meta_collection_sets.type = 'interface' GROUP BY collection_set_name, type" |grep INTF > ACTIVE_INTF_LIST

}
#-----------------------------------------------------------------------
#function to run disk manager sets
#-----------------------------------------------------------------------

run_DirChecker()

{

while read TP_LIST_mm
do
echo "triggering directory checker  of ${TP_LIST_mm}"
if [ "$TP_LIST_mm" == "DWH_BASE" ] ; then
continue
fi
if [ "$TP_LIST_mm" == "AlarmInterfaces" ] ; then
engine -e startSet DC_Z_ALARM Directory_Checker_AlarmInterface_RD
else
engine -e startSet ${TP_LIST_mm} Directory_Checker_${TP_LIST_mm}
fi
done < "TP_LIST"
rm ./TP_LIST

while read INTF_LIST_mm
do
#echo ${INTF_LIST_mm}> INTF_tmp
INTF_tmp_value=`expr match "$INTF_LIST_mm" '\(.*\)-eniq_oss_[[:digit:]]*' `

echo "triggering directory checker  of ${INTF_LIST_mm}"
engine -e startSet ${INTF_LIST_mm} Directory_Checker_$INTF_tmp_value
done < "ACTIVE_INTF_LIST"
rm ./ACTIVE_INTF_LIST
}

#-----------------------------------------------------------------------
#main body
#-----------------------------------------------------------------------
get_InstalledTPLIst
get_ActiveInterfaceList
run_DirChecker
